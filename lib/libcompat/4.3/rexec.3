.\" Copyright (c) 1983 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)rexec.3	6.8 (Berkeley) 6/23/90
.\"
.TH REXEC 3 "June 23, 1990"
.UC 5
.SH NAME
rexec \- return stream to a remote command
.SH SYNOPSIS
.nf
.PP
.B "rem = rexec(ahost, inport, user, passwd, cmd, fd2p);"
.B char **ahost;
.B int inport;
.B "char *user, *passwd, *cmd;"
.B int *fd2p;
.fi
.SH DESCRIPTION
.ft B
This interface is obsoleted by krcmd(3).
.br
It is available from the compatibility library, libcompat.
.ft R
.PP
.I Rexec
looks up the host
.I *ahost
using
.IR gethostbyname (3),
returning \-1 if the host does not exist.
Otherwise
.I *ahost
is set to the standard name of the host.
If a username and password are both specified, then these
are used to authenticate to the foreign host; otherwise
the environment and then the user's
.I .netrc
file in his
home directory are searched for appropriate information.
If all this fails, the user is prompted for the information.
.PP
The port
.I inport
specifies which well-known DARPA Internet port to use for
the connection; the call ``getservbyname("exec", "tcp")'' (see 
.IR getservent (3))
will return a pointer to a structure, which contains the
necessary port.
The protocol for connection is described in detail in
.IR rexecd (8).
.PP
If the connection succeeds,
a socket in the Internet domain of type SOCK_STREAM is returned to
the caller, and given to the remote command as
.B stdin
and
.BR stdout .
If
.I fd2p
is non-zero, then an auxiliary channel to a control
process will be setup, and a descriptor for it will be placed
in
.IR *fd2p .
The control process will return diagnostic
output from the command (unit 2) on this channel, and will also
accept bytes on this channel as being UNIX signal numbers, to be
forwarded to the process group of the command.  The diagnostic
information returned does not include remote authorization failure,
as the secondary connection is set up after authorization has been
verified.
If
.I fd2p
is 0, then the 
.B stderr
(unit 2 of the remote
command) will be made the same as the 
.B stdout
and no
provision is made for sending arbitrary signals to the remote process,
although you may be able to get its attention by using out-of-band data.
.SH SEE ALSO
rcmd(3), rexecd(8)
