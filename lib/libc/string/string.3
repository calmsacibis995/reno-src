.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)string.3	6.8 (Berkeley) 6/24/90
.\"
.TH STRING 3 "June 24, 1990"
.UC 4
.SH NAME
strcat, strncat, strchr, strrchr, strcmp, strncmp, strcasecmp,
strncasecmp, strcpy, strncpy, strerror, strlen, strpbrk, strsep,
strspn, strcspn, strstr, strtok, index, rindex \- string operations
.SH SYNOPSIS
.nf
.ft B
#include <string.h>

char *
strcat(char *s, const char * append);

char *
strncat(char *s, const char *append, size_t count);

char *
strchr(const char *s, int c);

char *
strrchr(const char *s, int c);

strcmp(const char *s1, const char *s2);

strncmp(const char *s1, const char *s2, size_t count);

strcasecmp(const char *s1, const char *s2);

strncasecmp(const char *s1, const char *s2, size_t count);

char *
strcpy(char *dst, const char *src);

char *
strncpy(char *dst, const char *src, size_t count);

char *
strerror(int errno);

size_t
strlen(const char *s);

char *
strpbrk(const char *s, const char *charset);

char *
strsep(char **stringp, const char *delim);

size_t
strspn(const char *s, const char *charset);

size_t
strcspn(const char *s, const char *charset);

char *
strstr(const char *big, const char *little);

char *
strtok(char *s, const char *delim);

char *
index(const char *s, int c);

char *
rindex(const char *s, int c);
.ft R
.fi
.SH DESCRIPTION
These functions operate on null-terminated strings.
.PP
See the specific manual pages for more information.
.PP
Except as noted in their specific manual pages,
they do not check for overflow of any destination
string.
.SH SEE\ ALSO
index(3), strcat(3), strchr(3), strrchr(3), strcmp(3), strcasecmp(3),
strcpy(3), strerror(3), strlen(3), strpbrk(3), strsep(3), strspn(3),
strcspn(3), strstr(3), strtok(3), rindex(3)
.SH STANDARDS
.IR Strcat ,
.IR strncat ,
.IR strchr ,
.IR strrchr ,
.IR strcmp ,
.IR strncmp ,
.IR strcpy ,
.IR strncpy ,
.IR strerror ,
.IR strlen ,
.IR strpbrk ,
.IR strsep ,
.IR strspn ,
.IR strcspn ,
.IR strstr ,
and
.IR strtok
conform to ANSI X3.159-1989 (``ANSI C'').
