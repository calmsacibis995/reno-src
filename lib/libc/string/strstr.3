.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek.
.\"
.\" Redistribution and use in source and binary forms are permitted
.\" provided that: (1) source distributions retain this entire copyright
.\" notice and comment, and (2) distributions including binaries display
.\" the following acknowledgement:  ``This product includes software
.\" developed by the University of California, Berkeley and its contributors''
.\" in the documentation or other materials provided with the distribution
.\" and in all advertising materials mentioning features or use of this
.\" software. Neither the name of the University nor the names of its
.\" contributors may be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)strstr.3	5.1 (Berkeley) 5/15/90
.\"
.TH STRSTR 3 "May 15, 1990"
.UC 7
.SH NAME
strstr \- locate a substring in a string
.SH SYNOPSIS
.nf
.ft B
#include <string.h>

char *
strstr(const char *big, const char *little);
.ft R
.fi
.SH DESCRIPTION
.B Strstr
locates the first occurrence of the null-terminated string
.I little
in the null-terminated string
.IR big .
If
.I little
is the empty string,
.B strstr
returns
.IR big ;
if
.I little
occurs nowhere in
.IR big ,
.B strstr
returns NULL;
otherwise
.B strstr
returns a pointer to the first character of the first occurrence of
.IR little .
.SH SEE ALSO
index(3), memchr(3), rindex(3), strchr(3), strcspn(3), strpbrk(3), strrchr(3),
strsep(3), strspn(3), strtok(3)
.SH STANDARDS
.B Strstr
conforms to ANSI X3.159-1989 (``ANSI C'').
