.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)scandir.3	6.6 (Berkeley) 6/24/90
.\"
.TH SCANDIR 3  "June 24, 1990"
.UC 5
.SH NAME
scandir, alphasort \- scan a directory
.SH SYNOPSIS
.nf
.ft B
#include <sys/types.h>
#include <dirent.h>

scandir(dirname, namelist, select, compar)
char *dirname;
struct direct ***namelist;
int (*select)();
int (*compar)();

alphasort(d1, d2)
void *d1, *d2;
.ft R
.fi
.SH DESCRIPTION
.I Scandir
reads the directory
.I dirname
and builds an array of pointers to directory
entries using
.IR malloc (3).
It returns the number of entries in the array.
A pointer to the array of directory entries is stored in the location
referenced by
.IR namelist .
.PP
The
.I select
parameter is a pointer to a user supplied subroutine which is called by
.I scandir
to select which entries are to be included in the array.
The select routine is passed a
pointer to a directory entry and should return a non-zero
value if the directory entry is to be included in the array.
If
.I select
is null, then all the directory entries will be included.
.PP
The
.I compar
parameter is a pointer to a user supplied subroutine which is passed to
.IR qsort (3)
to sort the completed array.
If this pointer is null, the array is not sorted.
.PP
.I Alphasort
is a routine which can be used for the
.I compar
parameter to sort the array alphabetically.
.PP
The memory allocated for the array can be deallocated with
.IR free (3),
by freeing each pointer in the array and then the array itself.
.SH "SEE ALSO"
directory(3), malloc(3), qsort(3), dir(5)
.SH DIAGNOSTICS
Returns \-1 if the directory cannot be opened for reading or if
.IR malloc (3)
cannot allocate enough memory to hold all the data structures.
