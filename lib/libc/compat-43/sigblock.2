.\" Copyright (c) 1983 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)sigblock.2	6.6 (Berkeley) 7/1/90
.\"
.TH SIGBLOCK 2 "July 1, 1990"
.UC 5
.SH NAME
sigblock \- block signals
.SH SYNOPSIS
.nf
.B #include <signal.h>

.B sigblock(mask);
.B int mask;

.B mask = sigmask(signum)
.SH DESCRIPTION
.B "This interface is made obsolete by sigprocmask(2).
.LP
.I Sigblock
causes the signals specified in
.I mask
to be added to the set of signals currently
being blocked from delivery.
Signals are blocked if the
corresponding bit in 
.I mask
is a 1; the macro
.I sigmask
is provided to construct the mask for a given
.IR signum .
.PP
It is not possible to block SIGKILL
or SIGSTOP; this restriction is silently
imposed by the system.
.SH "RETURN VALUE
The previous set of masked signals is returned.
.SH "SEE ALSO"
kill(2), sigprocmask(2), sigaction(2), sigsetmask(2), sigsetops(3)
