.\" Copyright (c) 1983 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)implogd.8	6.6 (Berkeley) 6/24/90
.\"
.TH IMPLOGD 8 "June 24, 1990"
.UC 5
.SH NAME
implogd \- IMP logger process
.SH SYNOPSIS
.B implogd
.SH DESCRIPTION
.I Implogd
is program which logs error messages from the IMP,
placing them in the file
.IR /var/log/implog .
.PP
Entries in the file are variable length.  Each log
entry has a fixed length header of the form:
.PP
.ta 0.5i 1.0i 1.5i
.nf
struct sockstamp {
	short	sin_family;
	u_short	sin_port;
	struct	in_addr sin_addr;
	time_t	sin_time;
	int	sin_len;
};
.fi
.PP
followed, possibly, by the message received from the IMP.
Each time the logging process is started up it places a
time stamp entry in the file (a header with
.I sin_len
field set to 0).
.PP
The logging process will catch only those message from the IMP
which are not processed by a protocol module, e.g. IP.
This implies the log should contain only status information such
as ``IMP going down'' messages, ``host down'' and other error messages,
and, perhaps, stray NCP messages.
.SH "SEE ALSO"
imp(4), implog(8)
