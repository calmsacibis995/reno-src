.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This manual is derived from one contributed to Berkeley by
.\" Michael Rendell of Memorial University of Newfoundland.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"     @(#)tsort.1	6.4 (Berkeley) 6/24/90
.\"
.TH tsort 1 "%Q"
.AT 3
.SH NAME
tsort \- topological sort of a directed graph
.SH SYNOPSIS
.nf
.ft B
tsort [ file ]
.ft R
.fi
.SH DESCRIPTION
.I Tsort
takes a list of pairs of node names representing directed arcs in
a graph and prints the nodes in topological order on standard output.
Input is taken from the named file, or from standard input if no file
is given.
.PP
Node names in the input are separated by white space and there must be an
even number of nodes.
.PP
Presence of a node in a graph can be represented by an arc from the node
to itself.
This is useful when a node is not connected to any other nodes.
.PP
If the graph contains a cycle (and therefore cannot be properly sorted),
one of the arcs in the cycle is ignored and the sort continues.
Cycles are reported on standard error.
