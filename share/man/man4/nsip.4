.\" Copyright (c) 1985 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms are permitted provided
.\" that: (1) source distributions retain this entire copyright notice and
.\" comment, and (2) distributions including binaries display the following
.\" acknowledgement:  ``This product includes software developed by the
.\" University of California, Berkeley and its contributors'' in the
.\" documentation or other materials provided with the distribution and in
.\" all advertising materials mentioning features or use of this software.
.\" Neither the name of the University nor the names of its contributors may
.\" be used to endorse or promote products derived from this software without
.\" specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
.\" WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
.\"
.\"	@(#)nsip.4	1.3 (Berkeley) 6/23/90
.\"
.TH NSIP 4 "June 23, 1990"
.UC 6
.SH NAME
nsip \- software network interface encapsulating ns packets in ip packets.
.SH SYNOPSIS
.B options NSIP
.br
.B #include <netns/ns_if.h>
.SH DESCRIPTION
The
.I nsip
interface is a software mechanism which may be
used to transmit Xerox NS(tm) packets through otherwise uncooperative
networks.
It functions by prepending an IP header, and resubmitting the packet
through the unix IP machinery.
.LP
The super-user can advise the operating system of a willing partner
by naming an IP address to be associated with an NS address.
Presently, only specific hosts pairs are allowed, and for each host
pair, an artificial point-to-point interface is constructed.
At some future date, IP broadcast addresses or hosts may be paired
with NS networks or hosts.
.LP
Specifically, a socket option of SO_NSIP_ROUTE is set on a socket
of family AF_NS, type SOCK_DGRAM, passing the following structure:
.nf

struct nsip_req {
	struct sockaddr rq_ns;	/* must be ns format destination */
	struct sockaddr rq_ip;	/* must be ip format gateway */
	short rq_flags;
};

.SH DIAGNOSTICS
\fBnsip%d: can't handle af%d\fP.  The interface was handed
a message with addresses formatted in an unsuitable address
family; the packet was dropped.
.SH SEE ALSO
intro(4), ns(4)
.SH BUGS
It is absurd to have a separate pseudo-device for each pt-to-pt
link.
There is no way to change the IP address for an NS host once the
the encapsulation interface is set up.
The request should honor flags of RTF_GATEWAY to indicate
remote networks, and the absence of RTF_UP should be a clue
to remove that partner.
This was intended to postpone the necessity of rewriting reverse ARP
for the 
.B en
device, and to allow passing XNS packets through an
Arpanet-Milnet gateway, to facilitate testing between some co-operating
universities.
